version: "3.9"

services:
  bot:
    container_name: bot
    image: yannxy/bot:1.0.0
    build: ./bot
    restart: always
    depends_on:
      - api
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl --fail http://${API_URL}/health || exit 1"
        ]
      start_period: 30s
      interval: 30s
      timeout: 10s
      retries: 3

  api:
    container_name: api
    image: yannxy/bot-api:1.0.0
    build: ./api
    restart: always
    ports:
      - "4000:4000"
    environment:
      - DB_URL=${DB_URL}
    depends_on:
      - db
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl --fail http://${API_URL}/health || exit 1"
        ]
      start_period: 30s
      interval: 30s
      timeout: 10s
      retries: 3

  db:
    container_name: db
    image: postgres:12
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${POSTGRES_USER}" ]
      start_period: 30s
      interval: 30s
      timeout: 10s
      retries: 3

  web:
    container_name: web
    image: yannxy/bot-web:1.0.0
    build: ./web
    restart: always
    ports:
      - "8080:80"
    depends_on:
      - api
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://${WEB_URL}/health" ]
      start_period: 30s
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  pgdata: {}
